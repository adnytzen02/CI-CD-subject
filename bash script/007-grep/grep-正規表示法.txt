正規表示法就是用在字串的處理上面的一項『表示式』。
正規表示法並不是一個工具程式， 
而是一個字串處理的標準依據，
如果您想要以正規表示法的方式處理字串，就得要使用支援正規表示法的工具程式才行， 
這類的工具程式很多，例如 vi, sed, awk 等等。

正規表示法基本上是一種『表示法』， 只要工具程式支援這種表示法，
那麼該工具程式就可以用來作為正規表示法的字串處理之用。 
例如 vi, grep, awk ,sed 等等工具，因為她們有支援正規表示法， 
所以，這些工具就可以使用正規表示法的特殊字元來進行字串的處理。


但例如 cp, ls 等指令並未支援正規表示法， 
所以就只能使用 bash 自己本身的萬用字元而已。

萬用字元 (wildcard) 代表的是 bash 操作介面的一個功能』，
但正規表示法則是一種字串處理的表示方式！
正規表示法就是處理字串的方法，他是以行為單位來進行字串的處理行為， 
正規表示法透過一些特殊符號的輔助，可以讓使用者輕易的達到『搜尋/刪除/取代』某特定字串的處理程序！

[:cntrl:]	代表鍵盤上面的控制按鍵，亦即包括 CR, LF, Tab, Del.. 等等
[:graph:]	除了空白字元 (空白鍵與 [Tab] 按鍵) 外的其他所有按鍵
[:xdigit:]	代表 16 進位的數字類型，因此包括： 0-9, A-F, a-f 的數字與字元

====
匹配字符集
如何使用grep匹配字符集
點（。）匹配任何單個字符。您可以使用[..]語法匹配特定字符和字符範圍。
假設您要同時匹配'Vivek'或'vivek'：
grep '[vV]ivek' filename
或
grep '[vV][iI][Vv][Ee][kK]' filename
讓我們匹配數字以及大小寫字符。例如，嘗試對vivek1，Vivek2等單詞進行數學運算：
grep -w '[vV]ivek[0-9]' filename
在此示例中，請匹配兩個數字。換句話說，匹配foo11，foo12，foo22等，輸入：
grep 'foo[0-9][0-9]' filename
您不僅限於數字，還可以匹配至少一個字母：
grep '[A-Za-z]' filename
顯示所有包含“ w”或“ n”字符的行：
grep [wn] filename

在方括號表達式內，用“ [：”和“：]”括起來的字符類的名稱代表該類所有字符的列表。
標準字符類名稱為：
[[:alnum:]] - 字母數字字符。
[[:alpha:]] –字母字符
[[:blank:]] –空白字符：空格和製表符。
[[:digit:]] –數字：“ 0 1 2 3 4 5 6 7 8 9”。
[[:lower:]] –小寫字母：“ abcdefghijklmnopqrstu vwxy z”。
[[:space:]] –空格字符：製表符，換行符，垂直製表符，換頁符，回車符和空格。
[[:upper:]] –大寫字母：“ ABCDEFGHIJKLMNOPQRSTU VWXY Z”。
在此示例中，匹配所有大寫字母： 
grep '[:upper:]' filename
==================
[：punct：]：所有標點字符
[：print：]：所有可打印的字符（包含空格符）
[：graph：]：所有可打印的字符（不包含空格符）
[：cntrl：]：所有控製字符
[：xdigit：]：所有16進位制的數字
[= CHAR =]：所有符合指定的字符（等號裡的CHAR，代表你可自訂的字符）

[：alnum：]：所有字母字符與數字
[：alpha：]：所有字母字符
[：blank：]：所有水平間距
[：digit：]：所有數字
[：lower：]：所有小寫字母
[：space：]：所有水平與垂直間隔符
[：upper：]：所有大寫字母
